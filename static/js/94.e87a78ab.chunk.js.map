{"version":3,"file":"static/js/94.e87a78ab.chunk.js","mappings":"oJACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA4I,0BAA5I,EAAgL,yBCAhL,EAA6B,+B,sBCE7B,MAUA,EAVoBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKR,EAAMS,OAChBF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAIV,EAAKK,SAAEN,EAAMY,SACxB,ECDd,EANiBZ,IAETO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAUC,SAAEN,EAAMa,U,8BCInC,MA2BDC,EAAkBd,IACpB,MAKMe,GAAcC,EAAAA,EAAAA,IAAiB,IAErC,OACIT,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACDC,SATUC,IACdC,QAAQC,IAAIF,GACZnB,EAAMsB,cAAcH,EAASN,QAAQ,EAQjCU,OAASC,IAAA,IAAC,aAAEC,GAAcD,EAAA,OACtBrB,EAAAA,EAAAA,MAAA,QAAMe,SAAWO,EAAcnB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACd,KAAO,UAAYe,UAAYC,EAAAA,GAAWC,YAAY,qBACtDC,UAAWC,EAAAA,EAAAA,IAAkBC,EAAAA,GAAUjB,QAElDR,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAAQ3B,SAAC,WACnB,GAEb,E,sBC7BV,SAAe4B,E,OAAAA,KACXC,EAAAA,EAAAA,KAnBmBC,IACZ,CACHC,YAAaD,EAAMC,gBAIDC,IACf,CACHC,YAAc1B,IACVyB,GAASE,EAAAA,EAAAA,GAAyB3B,GAAS,MAWnD4B,EAAAA,EAFJ,EDlBwBzC,IACpB,IAAIoC,EAAQpC,EAAMqC,YAEdK,EAAkBN,EAAMO,QAAQC,KAAIC,IAAKtC,EAAAA,EAAAA,KAACuC,EAAU,CAAC5C,GAAK2C,EAAE3C,GAAKU,KAAOiC,EAAEjC,KAAOH,IAAMoC,EAAEpC,QACzFsC,EAAmBX,EAAMY,SAASJ,KAAIK,IAAK1C,EAAAA,EAAAA,KAAC2C,EAAO,CAACrC,QAAUoC,EAAEpC,YAMpE,OACIN,EAAAA,EAAAA,KAAA,OAAAD,UACIH,EAAAA,EAAAA,MAAA,OAAKC,UAAYC,EAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKH,UAAYC,EAAgBC,SAC3BoC,KAENvC,EAAAA,EAAAA,MAAA,OAAKC,UAAYC,EAAYC,SAAA,CACvByC,GAEFxC,EAAAA,EAAAA,KAACO,EAAc,CAACQ,cAbTT,IACnBb,EAAMuC,YAAY1B,EAAQ,WAgBpB,G","sources":["webpack://react_app/./src/components/dialogs/Dialogs.module.css?04a9","webpack://react_app/./src/components/dialogs/dialog_item/DialogItem.module.css?d188","components/dialogs/dialog_item/DialogItem.jsx","components/dialogs/message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zp4aq\",\"dialogsItems\":\"Dialogs_dialogsItems__1zBiW\",\"active\":\"Dialogs_active__or1JP\",\"messages\":\"Dialogs_messages__vuRYo\",\"message\":\"Dialogs_message__lG12F\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogItem\":\"DialogItem_dialogItem__Jr1dr\"};","import s from \"./DialogItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return(\r\n        <div className={s.dialogItem}>\r\n            <img src={props.img}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./dialog_item/DialogItem\";\r\nimport Message from \"./message/Message\";\r\nimport React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Textarea } from \"../common/formsControls/FormsControls\";\r\nimport { composeValidators, maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nexport const Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem id={ d.id } name={ d.name } img={ d.img }/>)\r\n    let messagesElements = state.messages.map(m => <Message message={ m.message }/>)\r\n\r\n    const addNewMessage = (message) => {\r\n        props.sendMessage(message)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={ s.dialogs }>\r\n                <div className={ s.dialogsItems }>\r\n                    { dialogsElements }\r\n                </div>\r\n                <div className={ s.messages }>\r\n                    { messagesElements }\r\n\r\n                    <AddMessageForm addNewMessage={ addNewMessage }/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.addNewMessage(formData.message)\r\n    }\r\n\r\n    const maxLength50 = maxLengthCreator(50)\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={ onSubmit }\r\n            render={ ({ handleSubmit }) => (\r\n                <form onSubmit={ handleSubmit }>\r\n                    <div>\r\n                        <Field name={ \"message\" } component={ Textarea } placeholder=\"Enter your message\"\r\n                               validate={ composeValidators(required, maxLength50) }/>\r\n                    </div>\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n            ) }\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport { sendMessageActionCreator } from \"../../redux/dialogsReducer\";\r\nimport { Dialogs } from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageActionCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"names":["props","path","id","_jsxs","className","s","children","_jsx","src","img","NavLink","to","name","message","AddMessageForm","maxLength50","maxLengthCreator","Form","onSubmit","formData","console","log","addNewMessage","render","_ref","handleSubmit","Field","component","Textarea","placeholder","validate","composeValidators","required","type","compose","connect","state","dialogsPage","dispatch","sendMessage","sendMessageActionCreator","withAuthRedirect","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message"],"sourceRoot":""}