{"version":3,"file":"static/js/667.e96aba58.chunk.js","mappings":"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","sources":["components/profile/profile_info/ProfileInfo.module.css","components/profile/profile_info/ProfileStatusWithHooks.jsx","components/profile/profile_info/ProfileInfo.jsx","webpack://react_app/./src/components/profile/MyPosts/MyPosts.module.css?21c2","webpack://react_app/./src/components/profile/MyPosts/Post/Post.module.css?3dca","components/profile/MyPosts/Post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__zqIGz\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        // this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {props.updateStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{ status }</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={ onStatusChange } autoFocus={ true } onBlur={ deactivateEditMode }\r\n                           value={ status }/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport { Preloader } from \"../../common/preloader/Preloader\";\r\n// import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) return <Preloader/>\r\n\r\n    let contactsElements = Object.entries(profile.contacts).map(c => <div> { c[0] } : { c[1] } </div>)\r\n\r\n    return (\r\n        <div>\r\n            <div className={ s.descriptionBlock }>\r\n                <img src={ profile.photos.large || userPhoto }/>\r\n                <ProfileStatusWithHooks status={ status } updateStatus={ updateStatus }/>\r\n                <h3>{ profile.fullName }</h3>\r\n                <h3>{ profile.lookingForAJob ? '1' : '0' }</h3>\r\n                <h3>{ profile.lookingForAJobDescription }</h3>\r\n                { contactsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__D+wM4\",\"posts\":\"MyPosts_posts__O2I2w\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ccK15\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://psy.su/mod_files/gazeta/img_img_gazeta_8966.jpg?1617182416'/>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { composeValidators, maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/formsControls/FormsControls\";\r\n\r\nexport const MyPosts = (props) => {\r\n    let postsElements = props.posts.map(p => <Post message={ p.message } likesCount={ p.likesCount }/>)\r\n\r\n    const addPost = (post) => {\r\n        props.addPost(post)\r\n    }\r\n\r\n    return (\r\n        <div className={ s.postsBlock }>\r\n            <h3>My posts</h3>\r\n            <div className={ s.posts }>\r\n                { postsElements }\r\n            </div>\r\n            <AddPostForm addPost={ addPost }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.addPost(formData.post)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={ onSubmit }\r\n            render={ ({ handleSubmit }) => (\r\n                <form onSubmit={ handleSubmit }>\r\n                    <div>\r\n                        <Field validate={ composeValidators(required, maxLength10) } name={ \"post\" }\r\n                               component={ Textarea }\r\n                               placeholder=\"Enter your post\"/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Add post</button>\r\n                </form>\r\n            ) }\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport { MyPosts } from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (post) => dispatch(addPostActionCreator(post))\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./profile_info/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={ props.profile } status={ props.status } updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfile, getStatus, updateStatus } from \"../../redux/profileReducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile { ...this.props } profile={ this.props.profile } status={ this.props.status }\r\n                        updateStatus={ this.props.updateStatus }/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = { getProfile, getStatus, updateStatus }\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n//connect(mapStateToProps, mapDispatchToProps)(withRouter(AuthRedirectComponent))\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","updateStatus","currentTarget","value","autoFocus","onBlur","deactivateEditMode","_ref","profile","Preloader","contactsElements","Object","entries","contacts","map","c","className","s","src","photos","large","userPhoto","ProfileStatusWithHooks","fullName","lookingForAJob","lookingForAJobDescription","message","maxLength10","maxLengthCreator","AddPostForm","Form","onSubmit","formData","console","log","addPost","post","render","handleSubmit","Field","validate","composeValidators","required","name","component","Textarea","placeholder","type","connect","state","posts","profilePage","dispatch","addPostActionCreator","postsElements","p","Post","likesCount","ProfileInfo","MyPostsContainer","ProfileContainer","React","componentDidMount","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","Profile","mapDispatchToProps","compose","auth","id","withRouter","withAuthRedirect"],"sourceRoot":""}